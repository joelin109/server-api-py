# ansible-playbook ansible/pb_ec2.yml

- hosts: aws_ec2
  become: true
  become_user: root
  gather_facts: false

  vars:
    ansible_ssh_private_key_file: /Volumes/Mac-TBD/Server/aws-ec2/sing-ub-py.pem
    git_project_path: "{{deploy_project_path}}/{{git_repository_name}}"
  vars_files:
    - vars/ec2.yml

  tasks:
    - name: Check git file list
      shell: chdir={{git_project_path}} ls -a
      register: git_ls

    - name: Display file list from git
      debug: msg="{{ git_ls.stdout_lines }}"
      when: git_ls|success

    - name: Git pull
      shell: chdir={{git_project_path}} git pull
      sudo: yes
      register: git_pull

    - name: Display git pull result...
      debug: msg="{{ git_pull.stdout_lines }}"
      when: git_pull|success

    - name: Project python package changed? need pip install...!
      shell: chdir={{git_project_path}} cat requirements.txt
      when: git_pull.stdout.find('requirements') >= 0
      notify:
        - handler_pip_install
        - handler_pip_install_next
      register: requirements_txt
      ignore_errors: True

    - name:  Display python package if changed!
      debug: msg="{{ requirements_txt.stdout_lines }}"
      when:  git_pull.stdout.find('requirements') >= 0


    - name:  Get system current path...!
      shell: pwd
      register: sys_path_result

    - name:  Get system current user name...
      shell: echo $USER
      register: sys_user_result

    - name:  Display system current path & user name...
      debug: msg="{{ sys_path_result.stdout,  sys_user_result.stdout}}"

    - name:  Deploy setting files if code changed. Then restart server!
      template:
        src: "./uwsgi.ini"
        dest: "api_ops/"
        mode: 0644
        remote_src: yes
      when: git_pull.stdout.find('Already up-to-date') < 0
      ignore_errors: True

    - name: Cat uwsgi.ini...!
      shell: cat api_ops/uwsgi.ini
      when: git_pull.stdout.find('Already up-to-date') < 0
      ignore_errors: True
      register: uwsgi_ini
      notify:
        - handler_uwsgi_ini
        - handler_restart_nginx

    - include: task/service_reload.yml
      when: git_pull.stdout.find('Already up-to-date') < 0
      sudo: yes
      ignore_errors: True

    - debug: msg="{{ git_project_path }}"


  handlers:
     - name: handler_pip_install
       pip:
        virtualenv: "{{git_project_path}}/env"
        virtualenv_python: python3.6
        requirements: "{{git_project_path}}/requirements.txt"

     - name: handler_pip_install_next
       pip:
        virtualenv: "{{git_project_path}}/env"
        virtualenv_python: python3.6
        requirements: "{{git_project_path}}/requirements_next.txt"

     - name: handler_uwsgi_ini
       debug: msg="{{ uwsgi_ini.stdout_lines }}"

     - name: handler_restart_nginx
       service: name=nginx state=started enabled=yes
       ignore_errors: True
       sudo: yes